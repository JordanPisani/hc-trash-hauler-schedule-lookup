import{eC as w,eE as $,eF as P,aM as T,h as g,M as j,_ as h,u as n,C as r,E as s,G as _,aw as x,aF as O,aH as B,r as m,t as v}from"./index.648f63f9.js";import{u as U}from"./aaBoundingRect.2bce0adf.js";import{S as c}from"./TileInfo.fbd359e4.js";var R=Object.defineProperty,f=Object.getOwnPropertySymbols,k=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable,M=(t,e,a)=>e in t?R(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,L=(t,e)=>{for(var a in e||(e={}))k.call(e,a)&&M(t,a,e[a]);if(f)for(var a of f(e))I.call(e,a)&&M(t,a,e[a]);return t};const d={id:"0/0/0",level:0,row:0,col:0,extent:null};let u=class extends w($(P(T))){constructor(){super(...arguments),this.tileInfo=c.create({spatialReference:g.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new j(-20037508342787e-6,-2003750834278e-5,2003750834278e-5,20037508342787e-6,g.WebMercator),this.spatialReference=g.WebMercator}getTileBounds(t,e,a,l){const i=l||U();return d.level=t,d.row=e,d.col=a,d.extent=i,this.tileInfo.updateTileInfo(d),d.extent=null,i}fetchTile(t,e,a,l={}){const{signal:i}=l,p=this.getTileUrl(t,e,a),y={responseType:"image",signal:i,query:L({},this.refreshParameters)};return h(p,y).then(S=>S.data)}getTileUrl(){throw new n("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};r([s({type:c})],u.prototype,"tileInfo",void 0),r([s({type:["show","hide"]})],u.prototype,"listMode",void 0),r([s({readOnly:!0,value:"base-tile"})],u.prototype,"type",void 0),r([s({nonNullable:!0})],u.prototype,"fullExtent",void 0),r([s()],u.prototype,"spatialReference",void 0),u=r([_("esri.layers.BaseTileLayer")],u);const A=u,b=new x({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"}),E="https://dev.virtualearth.net";let o=class extends w(O(B(A))){constructor(t){super(t),this.type="bing-maps",this.tileInfo=new c({size:[256,256],dpi:96,origin:{x:-20037508342787e-6,y:20037508342787e-6,spatialReference:g.WebMercator},spatialReference:g.WebMercator,lods:[{level:1,resolution:78271.5169639999,scale:295828763795777e-6},{level:2,resolution:39135.7584820001,scale:147914381897889e-6},{level:3,resolution:19567.8792409999,scale:73957190948944e-6},{level:4,resolution:9783.93962049996,scale:36978595474472e-6},{level:5,resolution:4891.96981024998,scale:18489297737236e-6},{level:6,resolution:2445.98490512499,scale:9244648868618e-6},{level:7,resolution:1222.99245256249,scale:4622324434309e-6},{level:8,resolution:611.49622628138,scale:2311162217155e-6},{level:9,resolution:305.748113140558,scale:1155581108577e-6},{level:10,resolution:152.874056570411,scale:577790.554289},{level:11,resolution:76.4370282850732,scale:288895.277144},{level:12,resolution:38.2185141425366,scale:144447.638572},{level:13,resolution:19.1092570712683,scale:72223.819286},{level:14,resolution:9.55462853563415,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.38865713397468,scale:9027.977411},{level:17,resolution:1.19432856685505,scale:4513.988705},{level:18,resolution:.597164283559817,scale:2256.994353},{level:19,resolution:.298582141647617,scale:1128.497176},{level:20,resolution:.1492910708238085,scale:564.248588}]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(t){this._set("bingMetadata",t)}get copyright(){return m(this.bingMetadata)?this.bingMetadata.copyright:null}get operationalLayerType(){return b.toJSON(this.style)}get bingLogo(){return m(this.bingMetadata)?this.bingMetadata.brandLogoUri:null}load(t){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then(()=>this._getMetadata())):this.addResolvingPromise(Promise.reject(new n("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(t,e,a){if(!this.loaded||v(this.bingMetadata))return null;const l=this.bingMetadata.resourceSets[0].resources[0],i=l.imageUrlSubdomains[e%l.imageUrlSubdomains.length],p=this._getQuadKey(t,e,a);return l.imageUrl.replace("{subdomain}",i).replace("{quadkey}",p)}async fetchAttributionData(){return this.load().then(()=>v(this.bingMetadata)?null:{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map(t=>({attribution:t.attribution,coverageAreas:t.coverageAreas.map(e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]}))}))})}_getMetadata(){const t={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return h(`${E}/REST/v1/Imagery/Metadata/${t}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then(e=>{const a=e.data;if(a.statusCode!==200)throw new n("bingmapslayer:getmetadata",a.statusDescription);if(this.bingMetadata=a,this.bingMetadata.resourceSets.length===0)throw new n("bingmapslayer:getmetadata","no bing resourcesets");if(this.bingMetadata.resourceSets[0].resources.length===0)throw new n("bingmapslayer:getmetadata","no bing resources")}).catch(e=>{throw new n("bingmapslayer:getmetadata",e.message)})}_getPortalBingKey(){return h(this.portalUrl,{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then(t=>{if(!t.data.bingKey)throw new n("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=t.data.bingKey}).catch(t=>{throw new n("bingmapslayer:getportalbingkey",t.message)})}_getQuadKey(t,e,a){let l="";for(let i=t;i>0;i--){let p=0;const y=1<<i-1;(a&y)!=0&&(p+=1),(e&y)!=0&&(p+=2),l+=p.toString()}return l}};r([s({json:{read:!1,write:!1},value:null})],o.prototype,"bingMetadata",null),r([s({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],o.prototype,"type",void 0),r([s({type:c})],o.prototype,"tileInfo",void 0),r([s({type:String,readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"copyright",null),r([s({type:String,json:{write:!1,read:!1}})],o.prototype,"key",void 0),r([s({type:b.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:b.read}}})],o.prototype,"style",void 0),r([s({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],o.prototype,"operationalLayerType",null),r([s({type:String,json:{write:!1,read:!1}})],o.prototype,"culture",void 0),r([s({type:String,json:{write:!1,read:!1}})],o.prototype,"region",void 0),r([s({type:String,json:{write:!0,read:!0}})],o.prototype,"portalUrl",void 0),r([s({type:Boolean,json:{write:!1,read:!1}})],o.prototype,"hasAttributionData",void 0),r([s({type:String,readOnly:!0})],o.prototype,"bingLogo",null),o=r([_("esri.layers.BingMapsLayer")],o);const K=o;export{K as default};
