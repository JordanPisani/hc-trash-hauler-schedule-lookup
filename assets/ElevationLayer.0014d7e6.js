import{q as w,aE as S,aF as b,aG as T,aH as O,r as p,aI as P,u as I,aJ as L,_ as f,a2 as x,ad as y,C as i,E as o,aK as j,aL as E,ap as D,G as V,e as k,aM as C,aN as M,S as N,aO as A}from"./index.b4c7b16d.js";import{s as U}from"./ArcGISCachedService.441871bc.js";import"./TilemapCache.e98b6397.js";import"./TileInfo.65d77b19.js";import"./byteSizeEstimations.651aa0cf.js";import"./aaBoundingRect.39e6473b.js";var q=Object.defineProperty,H=Object.defineProperties,J=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,z=Object.prototype.hasOwnProperty,F=Object.prototype.propertyIsEnumerable,v=(r,e,t)=>e in r?q(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,d=(r,e)=>{for(var t in e||(e={}))z.call(e,t)&&v(r,t,e[t]);if(m)for(var t of m(e))F.call(e,t)&&v(r,t,e[t]);return r},$=(r,e)=>H(r,J(e));const G=w.getLogger("esri.core.workers.WorkerHandle");class K{constructor(e,t,s,l={}){this._mainMethod=t,this._listeners=[],this._promise=M(e,$(d({},l),{schedule:s})).then(h=>{if(this._thread===void 0){this._thread=h,this._promise=null,l.hasInitialize&&this.broadcast({},"initialize");for(const u of this._listeners)this._connectListener(u)}else h.close()}),this._promise.catch(h=>G.error(`Failed to initialize ${e} worker: ${h}`))}on(e,t){const s={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(s),this._connectListener(s),N(()=>{s.removed=!0,A(this._listeners,s),this._thread&&p(s.threadHandle)&&s.threadHandle.remove()})}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,s){if(this._thread){const l=this.getTransferList(t,e);return this._thread.invoke(e,t,{transferList:l,signal:s})}return this._promise?this._promise.then(()=>(y(s),this.invokeMethod(e,t,s))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}}class _ extends K{constructor(e=null){super("LercWorker","_decode",e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,s){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},s):Promise.resolve(null)}getTransferList(e){return[e.buffer]}release(){--this.ref<=0&&(c.forEach((e,t)=>{e===this&&c.delete(t)}),this.destroy())}}const c=new Map;function W(r=null){let e=c.get(k(r));return e||(p(r)?(e=new _(t=>r.schedule(t)),c.set(r,e)):(e=new _,c.set(null,e))),++e.ref,e}const g=w.getLogger("esri.layers.ElevationLayer");let a=class extends U(S(b(T(O(C))))){constructor(...r){super(...r),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=W()}normalizeCtorArgs(r,e){return typeof r=="string"?d({url:r},e):r}destroy(){this._lercDecoder=P(this._lercDecoder)}set minScale(r){this.constructed&&g.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(r){this.constructed&&g.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(r,e){let t=e.currentVersion;return t||(t=9.3),t}load(r){const e=p(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{for(let s=0;s<t.typeKeywords.length;s++)if(t.typeKeywords[s].toLowerCase()==="elevation 3d layer")return!0;throw new I("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},r).catch(L).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(r,e,t,s){const l=p((s=s||{signal:null}).signal)?s.signal:s.signal=new AbortController().signal,h={responseType:"array-buffer",signal:l},u={noDataValue:s.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(r,e,t,s)).then(()=>f(this.getTileUrl(r,e,t),h)).then(n=>this._lercDecoder.decode(n.data,u,l)).then(n=>({values:n.pixelData,width:n.width,height:n.height,maxZError:n.fileInfo.maxZError,noDataValue:n.noDataValue,minValue:n.minValue,maxValue:n.maxValue}))}getTileUrl(r,e,t){const s=!this.tilemapCache&&this.supportsBlankTile,l=x($(d({},this.parsedUrl.query),{blankTile:!s&&null}));return`${this.parsedUrl.path}/tile/${r}/${e}/${t}${l?"?"+l:""}`}async queryElevation(r,e){const{ElevationQuery:t}=await import("./ElevationQuery.0a94c9de.js");return y(e),new t().query(this,r,e)}async createElevationSampler(r,e){const{ElevationQuery:t}=await import("./ElevationQuery.0a94c9de.js");return y(e),new t().createSampler(this,r,e)}_fetchTileAvailability(r,e,t,s){return this.tilemapCache?this.tilemapCache.fetchAvailability(r,e,t,s):Promise.resolve("unknown")}async _fetchImageService(r){if(this.sourceJSON)return this.sourceJSON;const e={query:d({f:"json"},this.parsedUrl.query),responseType:"json",signal:r},t=await f(this.parsedUrl.path,e);t.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};i([o({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),i([o({readOnly:!0,type:j})],a.prototype,"heightModelInfo",void 0),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),i([o({type:["show","hide"]})],a.prototype,"listMode",void 0),i([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],a.prototype,"minScale",null),i([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],a.prototype,"maxScale",null),i([o({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0),i([o({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,"operationalLayerType",void 0),i([o()],a.prototype,"sourceJSON",void 0),i([o({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0),i([o(E)],a.prototype,"url",void 0),i([o()],a.prototype,"version",void 0),i([D("version",["currentVersion"])],a.prototype,"readVersion",null),a=i([V("esri.layers.ElevationLayer")],a),a.prototype.fetchTile.__isDefault__=!0;const ee=a;export{ee as default};
